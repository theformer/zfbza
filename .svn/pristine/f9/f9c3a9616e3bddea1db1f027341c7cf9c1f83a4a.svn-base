/* eslint-disable no-debugger */
import axios from "axios";
import qs from "qs";
import { Toast } from "antd-mobile";

Toast.config({
  mask: false,
});

// 环境的切换
// if (process.env.NODE_ENV == "development") {
//   axios.defaults.baseURL = "http://192.168.5.248:10000";
// } else if (process.env.NODE_ENV == "debug") {
//   axios.defaults.baseURL = "";
// } else if (process.env.NODE_ENV == "production") {
//   axios.defaults.baseURL = "https://wzza.zgyiyun.com";
// }

axios.defaults.timeout = 1000 * 12;

axios.defaults.headers.post["Content-Type"] = "application/json;charset=UTF-8";
axios.defaults.headers.post["X-Requested-With"] = "XMLHttpRequest";
axios.defaults.headers.post["TwiAuth"] = localStorage.getItem("token") || "";
axios.defaults.headers.post["Twi_Client"] = "web";

const appKey = "glihlr69+2001601131+urbqwj"; // 智安小区
// const appKey = 'rwar994y+2001101442+kmlznz' // 运维

// 响应拦截器
axios.interceptors.response.use(
  (response) => {
    // 如果返回的状态码为200，说明接口请求成功，可以正常拿到数据
    // 否则的话抛出错误
    if (response.status === 200) {
      return Promise.resolve(response);
    } else {
      return Promise.reject(response);
    }
  }
  // 服务器状态码不是2开头的的情况
  // 这里可以跟你们的后台开发人员协商好统一的错误状态码
  // 然后根据返回的状态码进行一些操作，例如登录过期提示，错误提示等等
  // 下面列举几个常见的操作，其他需求可自行扩展
  // error => {
  //     if (error.response.status) {
  //         switch (error.response.status) {
  //             // 401: 未登录
  //             // 未登录则跳转登录页面，并携带当前页面的路径
  //             // 在登录成功后返回当前页面，这一步需要在登录页操作。
  //             case 401:
  //
  //                 break;
  //
  //             // 403 token过期
  //             // 登录过期对用户进行提示
  //             // 清除本地token和清空vuex中token对象
  //             // 跳转登录页面
  //             case 403:
  //                 Toast.info({
  //                     message: '登录过期，请重新登录',
  //                     duration: 1000,
  //                     forbidClick: true
  //                 });
  //                 // 清除token
  //                 localStorage.removeItem('token');
  //                 store.commit('loginSuccess', null);
  //                 // 跳转登录页面，并将要浏览的页面fullPath传过去，登录成功后跳转需要访问的页面
  //                 setTimeout(() => {
  //                     router.replace({
  //                         path: '/login',
  //                         query: {
  //                             redirect: router.currentRoute.fullPath
  //                         }
  //                     });
  //                 }, 1000);
  //                 break;
  //
  //             // 404请求不存在
  //             case 404:
  //                 Toast.info({
  //                     message: '网络请求不存在',
  //                     duration: 1500,
  //                     forbidClick: true
  //                 });
  //                 break;
  //             // 其他错误，直接抛出错误提示
  //             default:
  //                 Toast.info({
  //                     message: error.response.data.message,
  //                     duration: 1500,
  //                     forbidClick: true
  //                 });
  //         }
  //         return Promise.reject(error.response);
  //     }
  // }
);

// let host = "https://wzza.zgyiyun.com";
// eslint-disable-next-line no-undef
// if (process.env.NODE_ENV === "development") {
// host = 'http://192.168.100.222:7081'
// host = 'http://121.196.45.25:7082'
// host = '/apis/'
// }

/**
 * get方法，对应get请求
 * @param {String} url [请求的url地址]
 * @param {Object} params [请求时携带的参数]
 */
// export function get(url, params) {
//   return new Promise((resolve, reject) => {
//     axios
//       .get(url, {
//         params: params,
//       })
//       .then((res) => {
//         resolve(res.data);
//       })
//       .catch((err) => {
//         reject(err.data);
//       });
//   });
// }
// /**
//  * post方法，对应post请求
//  * @param {String} url [请求的url地址]
//  * @param {Object} params [请求时携带的参数]
//  */
// export function post(url, params) {
//   console.log(params, "我是传进来的值", qs.stringify(params));
//   return new Promise((resolve, reject) => {
//     axios
//       .post(url, params)
//       .then((res) => {
//         resolve(res.data);
//       })
//       .catch((err) => {
//         reject(err.data);
//       });
//   });
// }
// 默認請求方式
export default {
  post({ url, data }) {
    return new Promise((resolve, reject) => {
      axios({
        url, // 必填 请求API。
        timeout: 10000,
        method: "post",
        data,
        headers: {
          "X-Requested-With": "XMLHttpRequest",
          "Content-Type": "application/json;charset=UTF-8",
          TwiAuth: localStorage.getItem("token") || "",
          Twi_Client: "web",
        },
      })
        .then((res) => {
          resolve(res);
        })
        .catch((err) => {
          reject(err);
        });
    });
  },
  get({ url, data }) {
    return new Promise((resolve, reject) => {
      axios({
        url, // 必填 请求API。
        timeout: 10000,
        method: "get",
        data,
        headers: {
          "X-Requested-With": "XMLHttpRequest",
          "Content-Type": "application/json;charset=UTF-8",
          TwiAuth: localStorage.getItem("token") || "",
          Twi_Client: "web",
        },
      })
        .then((res) => {
          resolve(res);
        })
        .catch((err) => {
          reject(err);
        });
    });
  },
};
